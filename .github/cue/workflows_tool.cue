package whaturl

import (
	"tool/file"
	"encoding/yaml"
	"text/tabwriter"
	"tool/cli"
)

command: gen: {

	for w in workflows {
		"\(w.filename)": file.Create & {
			filename: w.filename
			contents: """
					  # Generated by CUE from ../cue/workflows_tool.cue; do not edit

					  \(yaml.Marshal(w.workflow))
					  """
		}
	}

	"dependabot.yml": file.Create & {
		filename: "../dependabot.yml"
		contents: yaml.Marshal(dependabot)
	}

	"goreleaser.yaml": file.Create & {
		filename: "../../.goreleaser.yaml"
		contents: yaml.Marshal(dotgoreleaser)
	}

	".tool-versions": file.Create & {
		filename: "../../.tool-versions"
		contents: "golang " + _go_version + "\ncue " + _cue_version + "\n"
	}

	"config.yml": file.Create & {
		filename: "../../docs/config.yml"
		contents: yaml.Marshal(hugo)
	}

}

// https://github.com/monochromegane/mdt
command: "ls-steps": task: print: cli.Print & {
	text: tabwriter.Write([
		for x in readmeTable {
			"\(x.url_org_link);;;`\(x.repository)`;;;\(x.url_repository_link)"
		},
	])
}
