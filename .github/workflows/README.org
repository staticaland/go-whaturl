#+title: README

* About CUE

I am trying out [[https://cuelang.org/][CUE]]. At the moment there are no [[https://cuelang.org/docs/tutorials/tour/intro/schema/][schema definitions]]. It would be
possible to import the [[https://www.schemastore.org/json/][GitHub Workflow JSON schema]] to create one ([[https://youtu.be/Ey3ca0K2h2U?t=1244][video]]). If we
had a schema, we could validate the workflows. However, this is already covered
by [[https://github.com/rhysd/actionlint][actionlint]] which runs through the [[https://github.com/github/super-linter][Super-Linter]] (similar to [[https://github.com/oxsecurity/megalinter][Mega-Linter]]). The
command to import the schema is something like =cue import -l '#Workflow:' -p
github jsonschema: <filename>=.

When we have created some schemas and sub-schemas we can use =cue trim= to
remove boilerplate from the workflows. This is because [[https://cuelang.org/docs/tutorials/tour/intro/constraints/][values defined in a
constraint do not have to be included in the data]].

All of the CUE files here have been created with =cue import=.

One small caveat is that Dependabot will not be able to create pull requests for
the CUE files.

I use [[https://melpa.org/#/cue-mode][cue-mode for Emacs]]. It's fun to press =C-c C-c-= to eval the buffer.

* Export to YAML

This is the most primitive way to export CUE files to JSON. A more efficient way
is to use [[https://cuelang.org/docs/usecases/scripting/][the CUE scripting layer]].

#+begin_src sh
cue export --out yaml goreleaser.cue > goreleaser.cue
cue export --out yaml superlinter.cue > superlinter.yml
cue export --out yaml go.cue > go.yml
cue export --out yaml vale.cue > vale.yml
#+end_src

#+RESULTS:

As of writing, all of the CUE files in this directory is part of a package
called =workflows=. It's one big blob of data. That is to say, all the CUE files
are combined into one object. In this form, they are not compatible with GitHub
Actions. This is where [[workflows_tool.cue][workflows_tool.cue]] and [[./workflows.cue][workflows.cue]] come into play.
Files that end with =_tool.cue= are special in CUE. They define commands that
you can run with =cue cmd <command_name=. So =workflows_tool.cue= defines a
command called =genworkflows=. We can run it with =cue cmd genworkflows=.
